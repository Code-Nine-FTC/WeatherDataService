"""empty message

Revision ID: 004915e81992
Revises: 
Create Date: 2025-04-21 15:02:27.665851

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '004915e81992'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parameter_types',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('detect_type', sa.String(), nullable=True),
    sa.Column('measure_unit', sa.String(), nullable=False),
    sa.Column('qnt_decimals', sa.Integer(), nullable=False),
    sa.Column('offset', sa.Float(), nullable=True),
    sa.Column('factor', sa.Float(), nullable=True),
    sa.Column('create_date', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM now())'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parameter_types_id'), 'parameter_types', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('create_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('old_password', sa.JSON(), server_default=sa.text("'[]'::jsonb"), nullable=False, comment='List of old passwords'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('weather_stations',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('address', sa.JSON(), server_default=sa.text("'[]'::jsonb"), nullable=False, comment='List of address'),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('create_date', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM now())'), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_weather_stations_id'), 'weather_stations', ['id'], unique=False)
    op.create_table('parameters',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('parameter_type_id', sa.BIGINT(), nullable=False),
    sa.Column('station_id', sa.BIGINT(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['parameter_type_id'], ['parameter_types.id'], ),
    sa.ForeignKeyConstraint(['station_id'], ['weather_stations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parameters_id'), 'parameters', ['id'], unique=False)
    op.create_index(op.f('ix_parameters_parameter_type_id'), 'parameters', ['parameter_type_id'], unique=False)
    op.create_index(op.f('ix_parameters_station_id'), 'parameters', ['station_id'], unique=False)
    op.create_table('measures',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('measure_date', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM now())'), nullable=False),
    sa.Column('parameter_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['parameter_id'], ['parameters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measures_id'), 'measures', ['id'], unique=False)
    op.create_index(op.f('ix_measures_parameter_id'), 'measures', ['parameter_id'], unique=False)
    op.create_table('type_alerts',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('parameter_id', sa.BIGINT(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('math_signal', sa.String(), nullable=False),
    sa.Column('create_date', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM now())'), nullable=False),
    sa.Column('last_update', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.String(), server_default='D', nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['parameter_id'], ['parameters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_type_alerts_create_date'), 'type_alerts', ['create_date'], unique=False)
    op.create_index(op.f('ix_type_alerts_id'), 'type_alerts', ['id'], unique=False)
    op.create_index(op.f('ix_type_alerts_parameter_id'), 'type_alerts', ['parameter_id'], unique=False)
    op.create_table('alerts',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('measure_id', sa.BIGINT(), nullable=False),
    sa.Column('type_alert_id', sa.BIGINT(), nullable=False),
    sa.Column('create_date', sa.Integer(), server_default=sa.text('EXTRACT(epoch FROM now())'), nullable=False),
    sa.Column('is_read', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['measure_id'], ['measures.id'], ),
    sa.ForeignKeyConstraint(['type_alert_id'], ['type_alerts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_index(op.f('ix_alerts_measure_id'), 'alerts', ['measure_id'], unique=False)
    op.create_index(op.f('ix_alerts_type_alert_id'), 'alerts', ['type_alert_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_alerts_type_alert_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_measure_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_type_alerts_parameter_id'), table_name='type_alerts')
    op.drop_index(op.f('ix_type_alerts_id'), table_name='type_alerts')
    op.drop_index(op.f('ix_type_alerts_create_date'), table_name='type_alerts')
    op.drop_table('type_alerts')
    op.drop_index(op.f('ix_measures_parameter_id'), table_name='measures')
    op.drop_index(op.f('ix_measures_id'), table_name='measures')
    op.drop_table('measures')
    op.drop_index(op.f('ix_parameters_station_id'), table_name='parameters')
    op.drop_index(op.f('ix_parameters_parameter_type_id'), table_name='parameters')
    op.drop_index(op.f('ix_parameters_id'), table_name='parameters')
    op.drop_table('parameters')
    op.drop_index(op.f('ix_weather_stations_id'), table_name='weather_stations')
    op.drop_table('weather_stations')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_parameter_types_id'), table_name='parameter_types')
    op.drop_table('parameter_types')
    # ### end Alembic commands ###
