name: SonarQube Analysis

on:
  workflow_call:
  push:
    branches:
      - main
      - release
      - develop

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12' 
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Create Env File
        run: |
          echo "Criando arquivo .env..."
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" > .env
          echo "SECRET_KEY=${{secrets.SECRET_KEY}}" >> .env
          echo "ALGORITHM=${{secrets.ALGORITHM}}" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}" >> .env
          echo "DATABASE_URL_TEST=${{secrets.DATABASE_URL_TEST}}" >> .env
          echo "TEST_ENV=True" >> .env

      - name: Run Integration Tests
        run: |
          echo "Iniciando o container de testes..."
          docker compose up --abort-on-container-exit
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
