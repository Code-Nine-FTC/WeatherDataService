name: PR Pipeline Main/Develop/Release

on:
  pull_request:
    branches:
      - main
      - develop
      - release

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Linting
        run: |
          ruff check .
          mypy .
          
      - name: Create Env File
        run: |
          echo "Criando arquivo .env..."
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" > .env
          echo "SECRET_KEY=${{secrets.SECRET_KEY}}" >> .env
          echo "ALGORITHM=${{secrets.ALGORITHM}}" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}" >> .env
          echo "DATABASE_URL_TEST=${{secrets.DATABASE_URL_TEST}}" >> .env
          echo "TEST_ENV=True" >> .env

      - name: Run Unit Tests
        run: |
          echo "ðŸ§ª Executando testes unitÃ¡rios..."
          pytest tests/unit

      - name: Run Integration Tests
        run: |
          echo "Iniciando o container de testes..."
          git submodule update --init --recursive
          docker compose up --abort-on-container-exit --remove-orphans test-db test-migrations
                    
          echo "ðŸ”— Executando testes..."
          pytest --cov=. --cov-report=xml --cov-fail-under=80
