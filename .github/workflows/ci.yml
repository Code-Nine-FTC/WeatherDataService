name: CI Pipeline Feature/Hotfix

on:
  push:
    branches:
      - feature/**
      - hotfix/**

jobs:
  commit-check:
    name: Verify Commit Messages
    runs-on: ubuntu-latest
    
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Commit message verification
        run: |
          echo "🔍 Verificando mensagens de commit..."
          commits=$(git log --format=%s -n 10 --no-merges)
          regex="^(feat|fix|docs|style|refactor|test|chore|build): .+|^Merge .+"
      
          echo "$commits" | while IFS= read -r commit; do
            echo "🔍 Commit encontrado: '$commit'"
            if ! [[ "$commit" =~ $regex ]]; then
              echo "❌ Commit inválido!: '$commit'"
              echo "Os commits devem seguir o padrão: 'type: description'"
              exit 1
            fi
          done
          echo "✅ Todos os commits estão válidos!"

  feature-hotfix-pipeline:
    name: Feature/Hotfix Pipeline
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Linting
        run: |
          echo "🔍 Executando lint..."
          ruff check .
          
      - name: Run Type Checking
        run: |
          echo "🔍 Executando verificação de tipos..."
          mypy .

      - name: Run Unit Tests
        run: |
          echo "🧪 Executando testes unitários..."
          pytest tests/unit