name: CI

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop
      - "feature/*"
      - "hotfix/*"

jobs:
  test:
    name: Testes e Linting
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: tecsus
          POSTGRES_USER: codenine
          POSTGRES_PASSWORD: codenine-2025
        ports:
          - 5432:5432
      redis:
        image: redis:latest

    steps:
      - name: Checkout do código com submódulos
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Inicializar e atualizar submódulos corretamente
        run: |
          git submodule init
          git submodule update --recursive --remote

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.5"
      
      - name: Verificar estrutura do repositório
        run: ls -R
      
      
      - name: Verificar se há testes no WeatherDataService
        id: check_tests_weatherdata
        run: |
          if find . -type f -name "test_*.py" -o -name "*_test.py" | grep -q .; then
            echo "has_tests_weatherdata=true" >> $GITHUB_ENV
          else
            echo "has_tests_weatherdata=false" >> $GITHUB_ENV
          fi
      
      - name: Verificar se há testes no SharedDatabaseService
        id: check_tests_shareddb
        run: |
          if find app/core -type f -name "test_*.py" -o -name "*_test.py" | grep -q .; then
            echo "has_tests_shareddb=true" >> $GITHUB_ENV
          else
            echo "has_tests_shareddb=false" >> $GITHUB_ENV
          fi
          
      - name: Instalar Ruff
        run: |
            python -m pip install --upgrade pip
            pip install ruff

      - name: Verificar lint com Ruff
        run: |
            ruff check .

      - name: Verifica tipagem com mypy
        run: |
            mypy .

      - name: Instalar dependências e rodar testes - WeatherDataService
        if: env.has_tests_weatherdata == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
          pytest --cov=app

      - name: Instalar dependências e rodar testes - SharedDatabaseService
        if: env.has_tests_shareddb == 'true'
        run: |
          cd app/core
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
          pytest --cov=app
